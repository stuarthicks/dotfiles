# vi: ft=zsh

path_prepend()    { path=("$1" $path) }
manpath_prepend() { manpath=("$1" $manpath) }
path()            { echo "$PATH" | tr : $'\n' }
fpath()           { echo $fpath | tr ' ' $'\n' }
manpath()         { echo $manpath | tr ' ' $'\n' }
httprb()          { ruby -run -e httpd . -p "${1:-1090}" }

rbenv() {
    eval "$(command rbenv init --no-rehash - zsh)"
    rbenv "$@"
}

plenv() {
    eval "$(command plenv init --no-rehash - zsh)"
    plenv "$@"
}

pyenv() {
    eval "$(command pyenv init --no-rehash - zsh)"
    eval "$(command pyenv virtualenv-init --no-rehash - zsh)"
    pyenv "$@"
}

apt-purge-old-kernels() {
  echo 'Current: '$(uname -r) \
    && dpkg -l 'linux-*' \
    | sed '/^ii/!d;/'"$(uname -r | sed "s/\(.*\)-\([^0-9]\+\)/\1/")"'/d;s/^[^ ]* [^ ]* \([^ ]*\).*/\1/;/[0-9]/!d' \
    | xargs sudo apt-get -y purge
}

brews() {
  brew list | while read cask; do \
    echo -n $fg[blue] $cask $fg[white]
    brew deps $cask \
      | awk '{printf(" %s ", $0)}'
    echo ""
  done
}

brews-used() {
  brew list | while read cask; do \
    echo -n $fg[blue] $cask $fg[white]
    brew uses --installed $cask \
      | awk '{printf(" %s ", $0)}'
    echo ""
  done
}

function start-ssh-agent {
  ssh-agent > "${SSH_ENV}"
  chmod 600 "${SSH_ENV}"
  source "${SSH_ENV}" > /dev/null 2>&1
}

# CTRL-O to open with `open` command,
# CTRL-E or Enter key to open with the $EDITOR
f() {
  local out file key
  out=$(fzf-tmux --query="$1" --exit-0 --expect=ctrl-o,ctrl-e)
  key=$(head -1 <<< "$out")
  file=$(head -2 <<< "$out" | tail -1)
  if [ -n "$file" ]; then
    [ "$key" = ctrl-o ] && open "$file" || ${EDITOR:-nvim} "$file"
  fi
}

# fd - cd to selected directory
fd() {
  local dir
  dir=$(find ${1:-*} -path '*/\.*' -prune \
                  -o -type d -print 2> /dev/null | fzf +m) &&
  cd "$dir"
}

# fda - including hidden directories
fda() {
  local dir
  dir=$(find ${1:-.} -type d 2> /dev/null | fzf +m) && cd "$dir"
}

# cdf - cd into the directory of the selected file
cdf() {
   local file
   local dir
   file=$(fzf +m -q "$1") && dir=$(dirname "$file") && cd "$dir"
}

# fkill - kill process
fkill() {
  pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')

  if [ "x$pid" != "x" ]
  then
    kill -${1:-9} $pid
  fi
}

# fbr - checkout git branch (including remote branches)
br() {
  local branches branch
  branches=$(git branch --all | grep -v HEAD) &&
  branch=$(echo "$branches" |
           fzf-tmux -d $(( 2 + $(wc -l <<< "$branches") )) +m) &&
  git checkout $(echo "$branch" | sed "s/.* //" | sed "s#remotes/[^/]*/##")
}

# fshow - git commit browser
show() {
  local out sha q
  while out=$(
      git log --decorate=short --graph --oneline --color=always |
      fzf --ansi --multi --no-sort --reverse --query="$q" --print-query); do
    q=$(head -1 <<< "$out")
    while read sha; do
      [ -n "$sha" ] && git show --color=always $sha | less -R
    done < <(sed '1d;s/^[^a-z0-9]*//;/^$/d' <<< "$out" | awk '{print $1}')
  done
}

d() {
  if [[ -z "$*" ]]; then
    cd "$(_z -l 2>&1 | fzf +s --tac | sed 's/^[0-9,.]* *//')"
  else
    _z "$@"
  fi
  pwd
}

zom() {
  (
    cd && \
    zcompile \
      '.zshrc' \
      '.zshenv' \
      '.zprofile' \
      '.functions' \
      '.aliases'
    )
}
