#!/bin/bash
set -euo pipefail

PRINT_USAGE() {
  echo USAGE:
  echo '  -f [FILTER] -j [JSON_FILE] -d [OUTPUT_DIR]'
}

while getopts ":f:j:d:h" opt; do
  case $opt in
    f)
      OPT_FILTER=$OPTARG
      ;;
    j)
      OPT_JSON=$OPTARG
      ;;
    d)
      OPT_DIR=$OPTARG
      ;;
    h)
      PRINT_USAGE
      exit
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      PRINT_USAGE
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      PRINT_USAGE
      exit 1
      ;;
  esac
done

FILTER=${OPT_FILTER:-.}
INPUT_JSON=${OPT_JSON:-}
OUTPUT_DIR=${OPT_DIR:-$INPUT_JSON.out}

if [ -z "${INPUT_JSON:-}" ]; then
  echo 'Input file is required'
  echo
  PRINT_USAGE
  exit 1
fi

mkdir -p "$OUTPUT_DIR"

jq -r "$FILTER | keys[]" "$INPUT_JSON" |\
  while read -r key; do
    jq "$FILTER.\"$key\"" "$INPUT_JSON" | jq . > "$OUTPUT_DIR/$key.json"
    echo "Extracted $OUTPUT_DIR/$key.json"
  done
