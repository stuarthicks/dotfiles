#!/usr/bin/env ruby

require 'aws-sdk'

def die(msg)
  puts msg
  exit 1
end

def get_proxy()
  e = ENV['https_proxy']
  if e && !e.empty?
    if !e.start_with? "http"
      e = "https://#{e}"
    end
  end
  return e
end

TOPIC_ARN = ARGV[0]

die 'You must provide a topic arn as the first and only parameter' if TOPIC_ARN.nil?
die 'AWS_ACCESS_KEY_ID not set' if ENV['AWS_ACCESS_KEY_ID'].nil?
die 'AWS_SECRET_ACCESS_KEY not set' if ENV['AWS_SECRET_ACCESS_KEY'].nil?

AWS.config({
  :region => 'eu-west-1',
  :http_wire_trace => ENV.include?("AWS_DEBUG"),
  :proxy_uri => get_proxy()
})

sqs = AWS::SQS.new()
sns = AWS::SNS.new()

subs = sns.topics[TOPIC_ARN].subscriptions

subs.each do |s|
  queue_arn = s.endpoint
  queue_name = queue_arn.split(':')[5]
  queue = sqs.queues.with_prefix(queue_name).first
  if queue.nil? || (!queue.exists?)
    s.unsubscribe
    puts "Removed subscription for non-existent queue #{queue_name}"
  end
end